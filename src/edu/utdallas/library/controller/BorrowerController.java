package edu.utdallas.library.controller;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JOptionPane;

import edu.utdallas.library.model.Model;
import edu.utdallas.library.util.Queries;
import edu.utdallas.library.util.Util;
import edu.utdallas.library.view.MainFrame;

/**
 * All the method that controls the borrower panel.
 * 
 * @author Poojan
 * 
 */
public class BorrowerController {
	private MainFrame view;
	private Model model;

	public BorrowerController(MainFrame view, Model model) {
		this.view = view;
		this.model = model;
	}

	/**
	 * Adds listener to each swing control.
	 */
	public void control() {

		view.getBtnSearchBorrower().addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {
				borrowerPopulate();
			}
		});

		view.getTfBorrower().addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				borrowerPopulate();
			}
		});

		view.getBtnSave().addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				if (view.gettFfirstName().getText().equals("")
						|| view.gettFlastname().getText().equals("")
						|| view.gettFaddress().getText().equals("")) {
					JOptionPane
							.showMessageDialog(view,
									"The mandatory fields are empty! Please correct it and retry.");
				} else {
					String q = "INSERT INTO borrower(fname, lname, address, phone) VALUES('"+view.gettFfirstName().getText()+"','"+view.gettFlastname().getText()+"','"+view.gettFaddress().getText()+"','"+view.gettFphone().getText()+"');";
					//Util.out(q);
					try {
						if(model.insert(q))
						{
							JOptionPane
							.showMessageDialog(view,
									"Added "+view.gettFfirstName().getText()+" to Borrowers");
							borrowerPopulate();
						}
						else
						{
							JOptionPane
							.showMessageDialog(view,
									"Something went wrong!");
						}
					} catch (HeadlessException | SQLException e1) {
						e1.printStackTrace();
						JOptionPane
						.showMessageDialog(view,
								"Borrower with name: "+view.gettFfirstName().getText()+" "+view.gettFlastname().getText()+" already exists!");
					}
				}
			}
		});
	}

	/**
	 * Populates the Borrower Table in the UI. It is called on Events that gets
	 * generated by UI components like button and text field.
	 */
	private void borrowerPopulate() {
		//Util.out("Searching Borrowers..");
		if (view.getTfBorrower().getText().equals("")) {
			view.getTableBorrower().setModel(
					model.getBorrowersTableModel(Queries.BORROWER_DEFAULT));
			//Util.out("Searching all the Borrowers..");
		} else if (view.getRdbtnCardNo().isSelected()) {
			String q = "SELECT card_no, fname, lname, address, phone FROM borrower WHERE card_no="
					+ view.getTfBorrower().getText() + ";";
			//Util.out(q);
			view.getTableBorrower().setModel(model.getBorrowersTableModel(q));
		} else if (view.getRdbtnFirstName().isSelected()) {
			String q = "SELECT card_no, fname, lname, address, phone FROM borrower WHERE fname LIKE '%"
					+ view.getTfBorrower().getText() + "%';";
			//Util.out(q);
			view.getTableBorrower().setModel(model.getBorrowersTableModel(q));
		} else if (view.getRdbtnLastName().isSelected()) {
			String q = "SELECT card_no, fname, lname, address, phone FROM borrower WHERE lname LIKE '%"
					+ view.getTfBorrower().getText() + "%';";
			//Util.out(q);
			view.getTableBorrower().setModel(model.getBorrowersTableModel(q));
		}
	}
}
